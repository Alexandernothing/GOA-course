// 3. კომენტარის სახით ახსენით რას გამოიტანს და რატომ: false && true || 'name' === 'Name' && 1 == '1'

// false && true გამოიტანს false ს, რადგან and უპირატესობას false ს ანიჭებს
// 'name' === 'Name' && 1 == '1' გამოიტანს false ს, რადგან: 'name' === 'Name' არის false და იმისდამიუხედავად რომ 1 == '1' true არის and უპირატესობას მაინც false ს ანიჭებს
// საბოლოოდ გამოგვივიდა: false || false რომელიც false გამოიტანს, იმიტომ, რომ true აქ არ არის